{"version":3,"sources":["generate-job-title.tsx","steps.enum.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["firstNameMap","monthBornMap","JSON","parse","process","console","error","Steps","ReactConfetti","styled","Confetti","Background","div","Header","header","Footer","footer","Button","button","inputStyles","Input","input","InputGroup","DropDownList","select","Label","label","JobTitle","h2","AppTitle","h1","App","useState","Welcome","currentStep","setCurrentStep","firstName","setFirstName","industry","setIndustry","monthBorn","setMonthBorn","useWindowSize","width","height","moveStep","useCallback","step","moveToStart","FirstName","moveToFinish","Finished","initializeStep","undefined","onKeyDown","key","jobTitle","firstNameLetter","charAt","toUpperCase","generateJobTitle","Helmet","title","property","content","rel","href","autoFocus","type","onClick","event","preventDefault","htmlFor","id","autoCapitalize","maxLength","placeholder","required","value","onChange","target","Industry","MonthBorn","parsedValue","parseInt","Number","isSafeInteger","numberOfPieces","role","aria-label","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7bf8f2e5.chunk.js","sourcesContent":["let firstNameMap: { [key: string]: string };\nlet monthBornMap: Array<string>;\n\ntry {\n  firstNameMap = JSON.parse(process.env.REACT_APP_FIRST_LETTER_ROLES || '');\n} catch {\n  console.error('Error parsing the First Letter Roles');\n}\n\ntry {\n  monthBornMap = JSON.parse(process.env.REACT_APP_MONTH_BORN_ROLES || '');\n} catch {\n  console.error('Error parsing the Month Born Roles');\n}\n\nexport const generateJobTitle = (\n  firstName?: string,\n  industry?: string,\n  monthBorn?: number\n): string | null => {\n  if (\n    firstName &&\n    industry &&\n    (monthBorn !== undefined || monthBorn !== null)\n  ) {\n    const firstNameLetter = firstName.charAt(0).toUpperCase();\n    if (\n      firstNameMap[firstNameLetter] &&\n      (monthBorn !== undefined || monthBorn !== null)\n    ) {\n      return `${firstNameMap[firstNameLetter]} ${industry} ${\n        monthBornMap[monthBorn ?? 0]\n      }`;\n    }\n  }\n\n  return null;\n};\n","export enum Steps {\n  Welcome = 0,\n  FirstName = 1,\n  Industry = 2,\n  MonthBorn = 3,\n  Finished = 4,\n}\n","import React, { ChangeEvent, useCallback, useState } from 'react';\nimport Confetti from 'react-confetti';\nimport { Helmet } from 'react-helmet';\nimport useWindowSize from 'react-use/lib/useWindowSize';\nimport styled from 'styled-components';\nimport { generateJobTitle } from './generate-job-title';\nimport { Steps } from './steps.enum';\n\nconst App = () => {\n  const [currentStep, setCurrentStep] = useState(Steps.Welcome);\n  const [firstName, setFirstName] = useState('');\n  const [industry, setIndustry] = useState('');\n  const [monthBorn, setMonthBorn] = useState<number>();\n  const { width, height } = useWindowSize();\n\n  const moveStep = useCallback((step: Steps) => setCurrentStep(step), []);\n\n  const moveToStart = useCallback(() => moveStep(Steps.FirstName), [moveStep]);\n  const moveToFinish = useCallback(() => moveStep(Steps.Finished), [moveStep]);\n\n  const initializeStep = useCallback(() => {\n    setCurrentStep(Steps.Welcome);\n    setFirstName('');\n    setIndustry('');\n    setMonthBorn(undefined);\n    moveToStart();\n  }, [moveToStart]);\n\n  const onKeyDown = useCallback(\n    (step: Steps) => ({ key }: React.KeyboardEvent<HTMLInputElement>) => {\n      if (key === 'Enter') {\n        moveStep(step);\n      }\n    },\n    [moveStep]\n  );\n\n  let jobTitle: string | null = '';\n  if (currentStep === Steps.Finished) {\n    jobTitle = generateJobTitle(firstName, industry, monthBorn);\n    if (!jobTitle) {\n      return <>Whoops, An Error Occurred</>;\n    }\n  }\n  return (\n    <>\n      <Helmet title={process.env.REACT_APP_WEBSITE_NAME}>\n        <meta\n          property=\"description\"\n          content={process.env.REACT_APP_WEBSITE_DESCRIPTION}\n        />\n        <meta\n          property=\"og:title\"\n          content={process.env.REACT_APP_WEBSITE_NAME}\n        />\n        <meta property=\"og:url\" content={process.env.REACT_APP_WEBSITE_URL} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta\n          property=\"og:description\"\n          content={process.env.REACT_APP_WEBSITE_DESCRIPTION}\n        />\n        <meta\n          property=\"og:image\"\n          content={`${process.env.REACT_APP_WEBSITE_URL}/app-screenshot.png`}\n        />\n        <link rel=\"canonical\" href={process.env.REACT_APP_WEBSITE_URL} />\n      </Helmet>\n      <Background>\n        <Header>\n          {currentStep === Steps.Welcome && (\n            <>\n              <AppTitle>{process.env.REACT_APP_WEBSITE_NAME}</AppTitle>\n              <Button\n                autoFocus\n                type=\"button\"\n                onClick={event => {\n                  event.preventDefault();\n                  initializeStep();\n                }}\n              >\n                Generate Job Title\n              </Button>\n            </>\n          )}\n          {currentStep === Steps.FirstName && (\n            <>\n              <Label htmlFor=\"firstName\">First Name</Label>\n              <InputGroup>\n                <Input\n                  id=\"firstName\"\n                  autoFocus\n                  autoCapitalize=\"words\"\n                  maxLength={30}\n                  placeholder=\"e.g Joe Bloggs\"\n                  required\n                  value={firstName}\n                  onChange={event => setFirstName(event.target.value)}\n                  onKeyDown={event => {\n                    if (firstName) {\n                      onKeyDown(Steps.Industry)(event);\n                    }\n                  }}\n                />\n                <Button\n                  type=\"button\"\n                  onClick={event => {\n                    event.preventDefault();\n                    if (firstName) {\n                      moveStep(Steps.Industry);\n                    }\n                  }}\n                >\n                  &rsaquo;\n                </Button>\n              </InputGroup>\n            </>\n          )}\n          {currentStep === Steps.Industry && (\n            <>\n              <Label htmlFor=\"industry\">Industry</Label>\n              <InputGroup>\n                <Input\n                  id=\"industry\"\n                  autoFocus\n                  autoCapitalize=\"words\"\n                  maxLength={30}\n                  placeholder=\"e.g. Marketing / Tech / Sales / Design\"\n                  required\n                  value={industry}\n                  onChange={event => setIndustry(event.target.value)}\n                  onKeyDown={event => {\n                    if (industry) {\n                      onKeyDown(Steps.MonthBorn)(event);\n                    }\n                  }}\n                />\n                <Button\n                  type=\"button\"\n                  onClick={event => {\n                    event.preventDefault();\n                    if (industry) {\n                      moveStep(Steps.MonthBorn);\n                    }\n                  }}\n                >\n                  &rsaquo;\n                </Button>\n              </InputGroup>\n            </>\n          )}\n          {currentStep === Steps.MonthBorn && (\n            <>\n              <Label htmlFor=\"monthBorn\">Month Born</Label>\n              <InputGroup>\n                <DropDownList\n                  id=\"monthBorn\"\n                  autoFocus\n                  value={monthBorn}\n                  required\n                  onKeyDown={event => {\n                    event.preventDefault();\n                    moveToFinish();\n                  }}\n                  onChange={({\n                    target: { value },\n                  }: ChangeEvent<HTMLSelectElement>) => {\n                    const parsedValue = parseInt(value, 10);\n                    if (Number.isSafeInteger(parsedValue)) {\n                      setMonthBorn(parsedValue);\n                    }\n                  }}\n                >\n                  <option value=\"0\">January</option>\n                  <option value=\"1\">February</option>\n                  <option value=\"2\">March</option>\n                  <option value=\"3\">April</option>\n                  <option value=\"4\">May</option>\n                  <option value=\"5\">June</option>\n                  <option value=\"6\">July</option>\n                  <option value=\"7\">August</option>\n                  <option value=\"8\">September</option>\n                  <option value=\"9\">October</option>\n                  <option value=\"10\">November</option>\n                  <option value=\"11\">December</option>\n                </DropDownList>\n                <Button\n                  type=\"button\"\n                  onClick={event => {\n                    event.preventDefault();\n                    moveToFinish();\n                  }}\n                >\n                  Finish\n                </Button>\n              </InputGroup>\n            </>\n          )}\n          {currentStep === Steps.Finished && (\n            <>\n              <div>\n                <ReactConfetti\n                  numberOfPieces={100}\n                  height={height}\n                  width={width}\n                />\n                <span>Your Job Title Is</span>...{' '}\n                <span role=\"img\" aria-label=\"Drum Roll\">\n                  🥁\n                </span>\n                <JobTitle>\n                  <span>{jobTitle}</span>\n                </JobTitle>\n                <p>\n                  Don't forget to share your new job title with the world!{' '}\n                  <span role=\"img\" aria-label=\"World\">\n                    🌍\n                  </span>\n                </p>\n              </div>\n              <Button\n                autoFocus\n                type=\"button\"\n                onClick={event => {\n                  event.preventDefault();\n                  initializeStep();\n                }}\n              >\n                Start Again\n              </Button>\n            </>\n          )}\n        </Header>\n        <Footer>\n          {process.env.REACT_APP_WEBSITE_FOOTER && (\n            <p>{process.env.REACT_APP_WEBSITE_FOOTER}</p>\n          )}\n          <p>\n            <span role=\"img\" aria-label=\"Megaphone\">\n              📣\n            </span>{' '}\n            Inspired by an idea from{' '}\n            <a\n              href=\"https://caroo.co.uk/\"\n              title=\"Caroo\"\n              rel=\"noopener noreferrer\"\n            >\n              Caroo\n            </a>\n          </p>\n        </Footer>\n      </Background>\n    </>\n  );\n};\n\nconst ReactConfetti = styled(Confetti)`\n  z-index: 0;\n`;\n\nconst Background = styled.div`\n  background: rgb(221, 0, 79);\n  background: linear-gradient(\n    90deg,\n    rgba(221, 0, 79, 1) 0%,\n    rgba(223, 49, 52, 1) 50%,\n    rgba(228, 79, 0, 1) 100%\n  );\n  color: #ffffff;\n  text-align: center;\n  overflow: auto;\n`;\n\nconst Header = styled.header`\n  min-height: 85vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nconst Footer = styled.footer`\n  min-height: 15vh;\n  p {\n    margin: 0;\n  }\n  a {\n    color: #292a37;\n  }\n`;\n\nconst Button = styled.button`\n  background-color: transparent;\n  font-weight: bolder;\n  padding: 0 20px;\n  height: 50px;\n  transition: all 0.2s ease-in-out;\n  font-size: 17px;\n  text-transform: uppercase;\n  color: #fff;\n  letter-spacing: 2px;\n  text-align: center;\n  vertical-align: middle;\n  line-height: 50px;\n  border: 2px solid #fff;\n  border-radius: 5px;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nconst inputStyles = `\n  outline: none;\n  margin: 0;\n  border: none;\n  box-shadow: none;\n  font-size: 14px;\n  line-height: 50px;\n  background: #fafafa;\n  box-shadow: inset 0 1px 3px 0 rgba(0, 0, 0, 0.08);\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  padding: 0 20px;\n  font-size: 16px;\n  color: #666;\n  transition: all 0.4s ease;\n`;\n\nconst Input = styled.input`\n  ${inputStyles} ::placeholder {\n    text-transform: none;\n  }\n  text-transform: capitalize;\n`;\n\nconst InputGroup = styled.div`\n  display: flex;\n  input[type='text'],\n  select {\n    flex-grow: 1;\n  }\n  button {\n    border-top-left-radius: 0px;\n    border-bottom-left-radius: 0px;\n  }\n`;\n\nconst DropDownList = styled.select`\n  ${inputStyles}\n  height: 50px;\n`;\n\nconst Label = styled.label`\n  font-size: 24px;\n  text-transform: capitalize;\n  display: block;\n  margin-bottom: 5px;\n`;\n\nconst JobTitle = styled.h2`\n  color: black;\n  font-size: 36px;\n  font-weight: bolder;\n  span {\n    background-color: #00dd8e;\n    padding: 5px;\n    width: auto;\n  }\n  text-transform: capitalize;\n`;\n\nconst AppTitle = styled.h1`\n  text-transform: capitalize;\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}